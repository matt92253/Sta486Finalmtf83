---
title: "analysis"
author: "Matthew Flanders"
date: "3/30/2022"
output: pdf_document
---

```{r, echo=F, warning=F}
library(tidyverse)
load("~/Sta486Finalmtf83/data/mat125data.rda")
```


#TODO:

  Ellie: honors code and learning aids
  
  for multiple attempts make sure that we only have the greatest score
  
  emmeans: for contrast between groups

  look into compairing semester to semester for pre/post covid
  
  on data cleaning years 16 to 19 had a typo where module 3 had the same
  M3T1 for both attempts


```{r, echo=F, warning=F}

# data becomes more normal when we drop test scores that are zero
# also working with actual tests not pre, practice, honors code or learning aids 
mat125data <- filter( mat125data, score != 0 &
                                  practice_test == 0 & 
                                  learning_aid == 0 & 
                                  honors_code == 0 & 
                                  pre_test == 0)

# create precovid DF 
f16_f19 <- mat125data %>% filter( year <= 19) 
f16_f19 <- filter( f16_f19,  year != 20 & season != "spring")

f16_f19$covid <- "0"

# create post  covid DF
f21 <- mat125data %>% filter( year == 21 & season == "fall")
f21 <- filter( f21, practice_test == 0 & 
                    learning_aid == 0 &
                    honors_code == 0)
f21$covid <- "1"

pre_post <- rbind( f16_f19, f21)

ggplot( pre_post, aes( x = module_final, y = score, fill = covid)) +
  geom_boxplot() + 
  labs( title = "Pre and Post Covid In Person Module Test Scores")

# additive model
# anova( lm( score ~ module_final + covid, pre_post ))
# 
# pre_post_model <- lm( score ~ module_final + covid, pre_post )
# plot( pre_post_model)


# interactive model
# anova( lm( score ~ module_final * covid, pre_post ))
# pre_post_model_interactive <- lm( score ~ module_final * covid, pre_post )
```
```{r}
anova( lm( score ~ module_final + covid, pre_post ))

pre_post_model <- lm( score ~ module_final + covid, pre_post )

pre_post_model %>% summary()

plot( pre_post_model)

# shapiro.test(pre_post_model$residuals)

ggplot(pre_post, aes( x = score))+
  geom_histogram( bins = 20)

pre_post %>% group_by( covid) %>% count()

```


```{r}

filtered <- mat125data
filtered <- filtered %>% pivot_wider( names_from = test_attempt, values_from = score)
```


```{r, echo=F, warning=F}
# for this graph we should only have students who took both exams

# section that was causing problems 15545721


# build t2_attempt from mat125data using only T2 attempts and actual tests
t2_attempts <- filter( mat125data, test_attempt == "T2")


# check for duplicates
t2_attempts[ duplicated( t2_attempts[, 1:4]), ]


# trim down t2_attempts to include only important columns
# t2_attempts <- select( t2_attempts, c( "Id", "module_final", "test_attempt", "score"))

# learning aid, honors code and practice tests were affecting creating this data frame
# there were multiple M1, M2, M3... entries for the same student when these were left in

# join t2_attempts and mat125 data by student ids and module_final columns
# again trimming down math125 data to only keep important rows
pairwise_comp <- inner_join( t2_attempts, 
                             select( 
                              filter( mat125data,
                                      practice_test == 0 & learning_aid == 0 
                                      & honors_code == 0),
                                      c( "Id", "module_final", "test_attempt", "score")),
                                      by = c("Id", "module_final"))


# remove duplicate entries for tests
# mat125data has the full data set, this resulted in the previous inner join 
# matching modules with the same attempts from t2_attempts
pairwise_comp <- filter( pairwise_comp, test_attempt.x != test_attempt.y)

# create difference column
pairwise_comp$score_diff = pairwise_comp$score.x - pairwise_comp$score.y


# plot
ggplot( pairwise_comp, aes( x = module_final, y = score_diff)) +
  geom_boxplot() +
  labs( title = "Pairwise Differences Between First and Second Attempt Test Scores")


# 
# # the following graph was made prior to dropping zero scores 
# 
# # dropping zero scores for T1 and T2 tests
# no_zeros <- filter( pairwise_comp, score.x != 0 & score.y != 0)
# ggplot( no_zeros, aes( x = module_final, y = score_diff)) +
#   geom_boxplot() +
#   labs( title = "No Zero Scores Pairwise Differences")



```
```{r}
pw_model <- lm( score_diff ~ module_final, pairwise_comp )
anova( pw_model)
plot( pw_model)
```


```{r}

# # the same with the above comment, this was done before removing zero values
# 
# n0_model <- lm( score_diff ~ module_final, no_zeros )
# anova(n0_model )
# plot(n0_model)

```



```{r, echo = F, warning = F}

tests <- filter( mat125data, practice_test == 0 & learning_aid == 0 & honors_code == 0)

# pre_remote
pre <- filter( tests, year == 19 )
pre$remote_time_period = "Before"

# split semester
split <- filter( tests, year == 20 & season == "spring" )
split$remote_time_period = "Split"

# remote
f20 <- filter( tests, year == 20 & season == "fall" )
s21 <- filter( tests, year == 21 & season == "spring")

f20$remote_time_period = "Full Remote f20"
s21$remote_time_period = "Full Remote s21"


# remote <- rbind( f20, s21)


# post_remote
f21 <- filter( tests, year == 21 & season == "fall" )
f21$remote_time_period = "After"


remote_learning <- rbind(pre,split, f20, s21, f21)

remote_learning <- remote_learning %>% 
  mutate( remote_time_period = fct_relevel( remote_time_period,
                                            "Before", "Split", "Full Remote f20","Full Remote s21", "After" ))

ggplot( remote_learning, aes( x = module_final, y = score, fill = remote_time_period)) +
  geom_boxplot()
# +
  # facet_grid( . ~ remote_time_period )+ 
  # labs( title = "Module Test Scores By Season and Year")


```
```{r}
rl_model <- lm( score ~ module_final + remote_time_period, remote_learning)
anova( rl_model)
plot( rl_model)
```



```{r, echo=F, warning=F, fig.width= 5, fig.height= 8.5}

no_practice <- filter( mat125data,  practice_test == 0 
                                    & learning_aid == 0 
                                    & honors_code == 0)

ggplot( no_practice, aes( x = module_final, y = score)) +
  geom_boxplot() + 
  facet_grid( professor_Id ~ .)+ 
  labs( title = "Module Test Scores by Professor")


```

```{r}
prof_model <- lm( score ~ module_final + professor_Id, no_practice)
anova( prof_model)
plot( prof_model)
```


```{r, echo=F, warning=F}
ggplot( no_practice, aes( x = module_final, y = score, fill = season)) +
  geom_boxplot() + 
  labs( title = "Spring and Fall Module Test Scores")


```
```{r}

season_model <- lm( score ~ season +  module_final, no_practice)
anova( season_model)
plot( season_model)
```



